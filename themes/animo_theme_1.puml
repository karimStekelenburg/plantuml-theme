@startuml

!define DARK
'!define TRANSPARANT

!$ANIMO_BLUE_1 = "607DB9"
!$ANIMO_BLUE_2 = "7993C4"
!$ANIMO_BLUE_3 = "93AACE"
!$ANIMO_BLUE_4 = "B1BFDB"
!$ANIMO_BLUE_5 = "D4DEE8"

!$ANIMO_WHITE_1 = "EFF0F0"
!$ANIMO_WHITE_2 = "F3F6F3"
!$ANIMO_WHITE_3 = "F9FAF8"
!$ANIMO_WHITE_4 = "FBFBFA"
!$ANIMO_WHITE_5 = "FFFFFF"

!$ANIMO_RED_1 = "#D36E6B"
!$ANIMO_RED_2 = "#D88583"
!$ANIMO_RED_3 = "#DE9B9C"
!$ANIMO_RED_4 = "#E8BAB7"
!$ANIMO_RED_5 = "#F3DADA"

!$ANIMO_BLACK_1 = "#1C1F23"
!$ANIMO_BLACK_2 = "#48494B"
!$ANIMO_BLACK_3 = "#707374"
!$ANIMO_BLACK_4 = "#979A9C"
!$ANIMO_BLACK_5 = "#C7CACA"

!if (%not(%variable_exists("$FONTNAME")))
!$FONTNAME = "Verdana"
!endif

!if (%not(%variable_exists("$FONTSIZE")))
!$FONTSIZE = 11
!endif

!ifdef DARK
skinparam backgroundColor #1a1d21
!$ACCENT = $ANIMO_BLUE_1
!$ACCENTDARK = $ANIMO_BLUE_2
skinparam stereotypeCBackgroundColor $ACCENT
!define DARKSTYLE
!endif

!ifdef LIGHT
!$ACCENT = $ANIMO_RED_4
!$ACCENTDARK = $ANIMO_RED_1
skinparam stereotypeCBackgroundColor $ACCENTDARK
!define LIGHTSTYLE
!endif

!ifdef LIGHTSTYLE
!$PRIMARYFONTCOLOR = $ANIMO_BLACK_1
!$SECONDARY = $ANIMO_BLACK_2
!$ARROWCOLOR = $ANIMO_BLACK_2
!$ARROWFONTCOLOR = $ANIMO_BLACK_2
!$BORDERCOLOR = $ANIMO_BLACK_1
!$BOXBG = $ANIMO_WHITE_4
!$LIGHTBORDERCOLOR = "cccccc"
!$LIGHTBG = "e0e0e0"
skinparam backgroundColor $ANIMO_WHITE_4
!endif

!ifdef DARKSTYLE
!$PRIMARYFONTCOLOR = $ANIMO_WHITE_1
!$SECONDARY = $ANIMO_BLACK_5
!$ARROWCOLOR = $ANIMO_BLACK_5
!$ARROWFONTCOLOR = $ANIMO_BLACK_5
!$BORDERCOLOR = $ANIMO_BLUE_1
!$BOXBG = $ANIMO_BLACK_1
!$LIGHTBORDERCOLOR = "767676"
!$LIGHTBG = "575757"
skinparam backgroundColor $ANIMO_BLACK_1
!endif

!ifdef TRANSPARANT
!$BOXBG = transparant
skinparam backgroundColor transparant
!endif

!procedure font_style()
  fontColor $PRIMARYFONTCOLOR
  fontName $FONTNAME
  fontSize $FONTSIZE
  stereotypeFontColor $SECONDARY
  stereotypeFontSize $FONTSIZE
!endprocedure

!procedure basic_style()
  backgroundColor $BOXBG
  borderColor $BORDERCOLOR
!endprocedure

!procedure light_style()
  backgroundColor $LIGHTBG
  borderColor $LIGHTBORDERCOLOR
!endprocedure

!procedure accent_style()
  backgroundColor $ACCENT
  borderColor $ACCENTDARK
!endprocedure

!procedure arrow_style()
  arrowColor $ARROWCOLOR
  arrowFontName $FONTNAME
  arrowFontColor $ARROWFONTCOLOR
  arrowFontSize $FONTSIZE
!endprocedure

skinparam roundcorner 5

' Class diagrams

skinparam circledCharacter {
  radius 8
  fontSize $FONTSIZE
  fontName $FONTNAME
}

skinparam class {
  basic_style()
  font_style()
  arrow_style()

  attributeFontColor $SECONDARY
  attributeFontSize $FONTSIZE
  attributeIconSize $FONTSIZE
}

' Sequence diagrams

skinparam actor {
  accent_style()
  font_style()
}

skinparam participant {
  basic_style()
  font_style()
}

skinparam collections {
  basic_style()
  font_style()
}

skinparam SequenceBox{
  light_style()
  font_style()
}

' Component diagrams

skinparam interface {
  accent_style()
  font_style()
}

skinparam component {
  basic_style()
  font_style()
}

skinparam node {
  basic_style()
  font_style()
}

skinparam database {
  basic_style()
  font_style()
}

skinparam queue {
  basic_style()
  font_style()
}

' Use Case diagrams

skinparam usecase {
  basic_style()
  font_style()
  arrow_style()
}

skinparam activity {
  basic_style()
  font_style()
  arrow_style()
}

skinparam sequence {
  font_style()
  arrow_style()

  lifeLineBorderColor $ACCENT
  lifeLineBackgroundColor $LIGHTBG
}

skinparam boundary {
  accent_style()
  font_style()
}

skinparam control {
  accent_style()
  font_style()
}

skinparam entity {
  accent_style()
  font_style()
}

' State diagrams

skinparam state {
  basic_style()
  font_style()
  arrow_style()
  startColor $ACCENT
  endColor $ACCENTDARK
}

' Object diagrams

skinparam object {
  basic_style()
  font_style()
  arrow_style()
}

' Common

skinparam note {
  accent_style()
  font_style()
}

skinparam cloud {
  basic_style()
  font_style()
  arrow_style()
}

skinparam rectangle {
  basic_style()
  font_style()
}

skinparam storage {
  basic_style()
  font_style()
}



class X {
  - thing: int
  someValue()
}

class Y {
  - thing: int
  someValue()
}

note right of X: Hi

X <|-- Y: joins



@enduml